#    Commands for postgres from freeCodeCamp.org 4 hour course:
#### (t) - terminal commands

|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 00.(t)   |  sudo -u postgres psql  	                          | Opens virtual enviroment for PostgreSQL, with user: {postgres}, |
|          |                                                      | with: {sudo} permition                                          |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 01.00    |  \l 	                                              | list all DATABASE                                               |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 02.00	   |  CREATE DATABASE Test;                               | Crate new DataBase with name: {Test},                           |
|          |                                                      | (; <- only with this shell understands that we write a command) |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 03.00(t) |  sudo -u postgres psql -> \password postgres 	      | Changes password to user:{postgres}                             |
|          |                                                      | !!!IT HELPS TO CONNECT SUBLIME SQLTools!!!                      |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 03.01(t) |  psql -h localhost -p 5432 -U postgres test	      | Open DataBase with name: {test}								    |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 03.02(t) |  sudo -u postgres psql -> \c test  	              | Open venv, than we choose: {\c} DataBase with name: {test}.     |
|          |                                                      | Analog: 03.01(t)                                                |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 04.00    |  DROP DATABASE test;                                 | Delete Fully DataBase. WARNING!!!! All data will be delete too, |
|          |                    				                  | and you cannot recover it                                       |
|          |  DROP TABLE person;                                  | Or if key: {TABLE} you could fully delete table                 |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 05.00    |  CREATE TABLE person (                               | Example of creation new table in DataBase with name : {person}  |
|		   |       	id INT,                                       |	5 columns, were names of columns: {id, first_name, last_name,   |
|		   |       	first_name VARCHAR(50),                       | gender, date_of_birth}.                                         |
|		   |       	last_name VARCHAR(50),                        | VARCHAR(50) - string with length 50.                            |
|		   |       	gender VARCHAR(7),                            |	DATE - data type                                                |
|		   |     	date_of_birth DATE );                         |                                                                 |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 05.01    |  \d                                                  | Display all tables in that DateBase                             |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 05.02    |  \d Name                                             | Display table in that DateBase, with name: {Name}               |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 06.00    | INSERT INTO person (                                 | Insert values: {VALUES} where each one value connects to        |
|    	   |	first_name,                                       | each one column name. Insert to: {INTO}                         |
|    	   |	last_name,                                        | table with name: {person}                                       |
|   	   |	gender,                                           |																	|
|    	   |	date_of_birth,                                    |																	|
|    	   |	email)                                            |																	|
|		   | VALUES ('Jakob', 'Wager', 'MALE',                    |																	|
|		   | 					'1991-01-01', 'jak@jajaK.com');   |																	|
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 07.00    | \dt 												  | Shows jsut Tables                                               |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 08.00    | \i path_to_file {~/Документы/SQL/test-query-3.sql}   | Execute that query                                              |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 08.01    | SELECT * FROM person;                                | Select:{SELECT} all: {*} COLLUMNS to output them on terminal,   |
|          | SELECT {collumns} from {some table_name};            | or just show, from table: {person}                              |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 09.00    | ASC                                                  | Ascending order 1 2 3 4 5                                       |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 09.01    | DESC                                                 | Discending order 5 4 3 2 1                                      |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 09.02    | SELECT * FROM person                                 | We are choosing our data sorted by ASC, by country of birth:    |
|          |		ORDER BY country_of_birth ASC;                | {ORDER BY country_of_birth ASC} - change order of sellection    |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 10.00    | SELECT DISTINCT country_of_birth                     | word: {DISTINCT} helps to select only unique values from        |
|          |     FROM person ORDER BY country_of_birth;           | collumn: {country_of_birth}                                     |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 11.00    | SELECT 1 = 1;                                        | Comparision operator. Output: {t}, as true, else: {f} - false   |
|          |                                                      | Operators: = < > <= >= <>(not equal)                            |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 12.00    | SELECT * FROM person LIMIT 13;                       | Will output only 13 rows                                        |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 13.00    | sudo -u postgres createuser --interactive NAME       | Creating new role                                               |
|          | CREATE ROLE demorole1 WITH LOGIN ENCRYPTED           |                                                                 |
|          |                        PASSWORD 'password1';         | New role with password                                          |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 14.00    | SELECT * FROM person WHERE email LIKE '%.com';       | LIKE - RegEx                                                    |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 15.00    | SELECT country_of_birth, COUNT(*)                    | Grouping by country, and apply function COUNT()                 |
|          |          FROM person GROUP BY country_of_birth       |                                                                 |
|----------|------------------------------------------------------|-----------------------------------------------------------------|
| 16.00    | SELECT country_of_birth, COUNT(*) FROM person        | GROUP BY with conditions: {HAVING (COUNT(*) > 15) - applying    |
|          |       GROUP BY country_of_birth                      |  to all data in list}                                           |
|          |       HAVING COUNT(*) > 15 ORDER BY COUNT DESC;      |                                                                 |
|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|

|----------|------------------------------------------------------|-----------------------------------------------------------------|
